################
## New Ideas  ##
################

0. logging full strategy status  (Mingyuan done)
1. R code for selecting parameters heuristically (Fei prototype)
2. Time based exit and limit order for VVDMS (Fei done)
3. alpha based MMS (Mingyuan)
4. CME style removing traded based on limit order feedback (Mingyuan prototype)


#################
##  Must have  ##
#################

priority descending

-1. change strategy such that no stop loss for each round of trading but take profit.

0. implement lockless logger and replace the old logger class.  // done

1. split strategy triggers.  // implemented by fye, needs mzhang to verify carefully

2. try out lockless logger and do profile.  // latency is justified, need to implement and replace the old logger class

3. test MMS and combine VVDSM and MMS to Trader3.  // done

4. combine VVDSM, MMS, LLS to Trader 4.  // to hold

5. update to 2013 CTP API (for FOK FAK order types?)

6. test UDP protocol and compare to TCP protocol.  // cannot do more tests now on the trading box

7. more detail logging, signal value, book status, etc. write some script analyzing logs (latency summary, pnl curve, etc.)

8. make sure the addLentency functionality in simulation works // added code, but haven't tested it out yet.

9. discuss with Fei about potential issues and changes we need to make trading two binaries (filtering messages? two paths?)

10. try send market order and limit order at the same process loop for VVDSM.

11. refactor code

12. make VVDSM more addaptive by utilizing high-frequency volatility


[make] a list for trader api initialization
1. query contract specifications: upper limit price, lower limit price, long margin ratio, short margin ratio, contract name, exchange name, MaxOrderRef
2. query and fill in time offset
3. implement OnRspOrderInsert and OnErrRtnOrder so that all error messages of market/limit orders are printed
4. implement OnRspOrderAction and OnErrRtnOrderAction so that all error messages of cancel market/limit orders are printed
5. query contract current position(s)

[make] a list for md api initialization
1. be cautious to deal with zero volume trade messages
2. add the time offset to market data

[make] a list for simulator core initialization
1. register strategies and update number of strategies (static variable during the day).
2. start time, stop time

[make] a list for strategy initialization
1. each strategy class's orderId starts with (MaxOrderRef/numStrategies+1)*numStrategies+stratId and increments by numStrategies

[make] a list for production real tests for converter assumptions
1. send a limit order far away from the market, print all the responses from CFFEX
2. send a market order, print all the responses
3. cancel the limit order from 1, print all the responses
4. send 1 buy limit order, 2 sell limit orders to close the position (check if the latter filled sell limit order will fail?)


####################
##  Good to have  ##
####################

implement IOC type order

plot cumulative pnl from backtesting result

implement modify order (px only, qty only, both px and qty)

CTP-trader-API: 5-level query data (not available right now), send order message limit

CTP-API: handle exceptions

Fix SessionID overflow? Defined by CTP-API...

Log signal numbers and error messages in logger

query depth market data somewhere before sending order  // heard querying data in the middle results in last snapshot for IF
